name: cicd-prototype.yml

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop, master, main]

# If more than one workflow for the same ref are triggered, cancel the oldest
# head_ref is the branch the pull_request was made from, otherwise it's branch the workflow is trigger on (for push)
concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  app-name: "test-ui"
  aws-region: "us-east-1"
  arty_npmrc_registry: "https://artifactory.coxautoinc.com/clutch-npm/"
  test: true

jobs:
  test-ui:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./scripts
    steps:
      - uses: actions/checkout@v3

      - id: set-creds
        name: set artifactory credentials
        run: |
          TEXT_TO_COPY="@clutch:registry=${{ env.arty_npmrc_registry }} \n
          //artifactory.coxautoinc.com/clutch-npm/:_authToken=${{ secrets.ARTY_NPMRC_TOKEN }} \n
          //artifactory.coxautoinc.com/clutch-npm-local/:_authToken=${{ secrets.ARTY_NPMRC_TOKEN }} \n
          email=${{ secrets.ARTY_NPRMC_EMAIL }} \n
          always-auth=true \n"
          echo "TEXT_TO_COPY<<EOF" > ~/.npmrc
        
      - uses: actions/checkout@v3
        with:
          path: clutchtech-internal-ui/clutchtech-internal-ui/clutchtech-internal-ui
          
      - run: ls -lah

      # - name: Cache node modules
      #   id: cache-npm
      #   uses: actions/cache@v3
      #   env:
      #     cache-name: cache-node-modules
      #   with:
      #     # npm cache files are stored in `~/.npm` on Linux/macOS
      #     path: ~/.npm
      #     key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-build-${{ env.cache-name }}-
      #       ${{ runner.os }}-build-
      #       ${{ runner.os }}-

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - id: update-NPM
        name: Update NPM
        run: npm install -g npm@8.9.0 -f
        
      - run : ls -lah

      - id: install-packages
        run: npm ci --legacy-peer-deps

      - id: build-application
        run: npm run build

      - id: install-zip
        run: sudo apt-get install zip

      - id: zip-params
        run: echo "::set-output name=name::${{ github.sha }}-${{ github.run_number }}.zip"

      - id: bundle-package
        run: |
          mkdir build
          zip -r .next/${{ steps.zip-params.outputs.name }} build/

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.zip-params.outputs.name }}
          path: build/${{ steps.zip-params.outputs.name }}
          if-no-files-found: error
          retention-days: 1
